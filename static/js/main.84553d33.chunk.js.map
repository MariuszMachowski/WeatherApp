{"version":3,"sources":["components/Form.js","components/Result.js","images/512px-React-icon.svg.png","components/Header.js","components/App.js","reportWebVitals.js","index.js"],"names":["Form","props","onSubmit","submit","type","value","userCity","onChange","change","placeholder","className","Result","weather","err","city","sunrise","sunset","temp","wind","pressure","date","picNr","humidity","clouds","content","ulr","errorPage","sunriseTime","Date","toLocaleTimeString","slice","sunsetTime","styles","backgroundImage","style","Header","src","reactLogo","alt","App","state","handleInputChange","e","setState","target","handleCitySubmit","preventDefault","API","fetch","then","response","ok","Error","json","data","time","toISOString","icon","main","all","name","sys","toFixed","speed","catch","console","log","this","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iRAYeA,EATF,SAACC,GACV,OACI,uBAAMC,SAAUD,EAAME,OAAtB,UACI,uBAAOC,KAAK,OAAOC,MAAOJ,EAAMK,SAAUC,SAAUN,EAAMO,OAAQC,YAAY,oBAC9E,wBAAQC,UAAU,UAAlB,SAA4B,mBAAGA,UAAU,wBCyDtCC,G,MA7DA,SAACV,GACZ,MAAmGA,EAAMW,QAAjGC,EAAR,EAAQA,IAAKC,EAAb,EAAaA,KAAMC,EAAnB,EAAmBA,QAASC,EAA5B,EAA4BA,OAAQC,EAApC,EAAoCA,KAAMC,EAA1C,EAA0CA,KAAMC,EAAhD,EAAgDA,SAAUC,EAA1D,EAA0DA,KAAMf,EAAhE,EAAgEA,MAAOgB,EAAvE,EAAuEA,MAAOC,EAA9E,EAA8EA,SAAUC,EAAxF,EAAwFA,OACpFC,EAAU,KACRC,EAAG,2CAAuCJ,EAAvC,WACHK,EACF,oBAAGhB,UAAU,cAAb,+CAA8DL,KAElE,IAAKQ,GAAOC,EAAM,CACd,IAAIa,EAAc,IAAIC,KAAe,IAAVb,GAAgBc,qBAC3CF,EAAcA,EAAYG,MAAM,EAAG,GACnC,IAAIC,EAAa,IAAIH,KAAc,IAATZ,GAAea,qBACzCE,EAAaA,EAAWD,MAAM,EAAG,GACjC,IAAIE,EAAS,CACTC,gBAAgB,OAAD,OAASR,EAAT,MAEnBD,EACI,0BAASd,UAAU,WAAnB,UACI,yBAAQA,UAAU,WAAlB,UACI,+BAAKI,EAAL,KAAY,uBAAMJ,UAAU,OAAhB,UAAwBO,EAAxB,cACZ,4BAAIG,IACJ,qBAAKV,UAAU,UAAUwB,MAAOF,OAEpC,wBAAOtB,UAAU,YAAjB,UACI,gCACI,8BAAIQ,EAAJ,SACA,oDAEJ,gCACI,8BAAIC,EAAJ,SACA,kDAEJ,gCACI,8BAAIG,EAAJ,OACA,wDAEJ,gCACI,8BAAIC,EAAJ,OACA,gDAEJ,gCACI,4BAAII,IACJ,8DAEJ,gCACI,4BAAII,IACJ,oEAOpB,OACI,mCACI,qBAAKrB,UAAU,SAAf,SACKG,EAAMa,EAAYF,QC1DpB,MAA0B,iDCa1BW,G,MATA,WACX,OACI,mCACI,gDACA,qBAAKzB,UAAU,MAAf,SAAqB,qBAAK0B,IAAKC,EAAWC,IAAI,YAAY5B,UAAU,gBCF1E6B,E,4MAEJC,MAAQ,CACNnC,MAAO,GACPe,KAAM,GACNE,SAAU,GACVC,OAAQ,GACRT,KAAM,GACNC,QAAS,GACTC,OAAQ,GACRC,KAAM,GACNC,KAAM,GACNC,SAAU,GACVE,MAAO,GACPR,KAAK,G,EAKP4B,kBAAoB,SAACC,GACnB,EAAKC,SAAS,CACZtC,MAAOqC,EAAEE,OAAOvC,S,EAIpBwC,iBAAmB,SAACH,GAClBA,EAAEI,iBAEF,IAAMC,EAAG,2DAAuD,EAAKP,MAAMnC,MAAlE,wDAET2C,MAAMD,GACHE,MAAK,SAAAC,GACJ,GAAIA,EAASC,GACX,OAAOD,EAET,MAAME,MAAM,8BAEbH,MAAK,SAAAC,GAAQ,OAAIA,EAASG,UAC1BJ,MAAK,SAAAK,GAEJ,IAAIC,EAAO,IAAI3B,KACf2B,EAAOA,EAAKC,cAAc1B,MAAM,EAAG,IACnC,EAAKa,SAAS,CACZ9B,KAAK,EACLQ,MAAOiC,EAAK1C,QAAQ,GAAG6C,KACvBrC,KAAMmC,EACNjC,SAAUgC,EAAKI,KAAKpC,SACpBC,OAAQ+B,EAAK/B,OAAOoC,IACpB7C,KAAMwC,EAAKM,KACX7C,QAASuC,EAAKO,IAAI9C,QAClBC,OAAQsC,EAAKO,IAAI7C,OACjBC,KAAMqC,EAAKI,KAAKzC,KAAK6C,QAAQ,GAC7B5C,KAAMoC,EAAKpC,KAAK6C,MAChB5C,SAAUmC,EAAKI,KAAKvC,SACpBd,MAAO,QAGV2D,OAAM,SAAAnD,GACLoD,QAAQC,IAAIrD,GACZ,EAAK8B,SAAS,CACZ9B,KAAK,EACLC,KAAM,EAAK0B,MAAMnC,Y,4CAKzB,WACE,OACE,sBAAKK,UAAU,MAAf,UACE,qBAAKA,UAAU,aAAf,gBACA,sBAAKA,UAAU,UAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,CACEJ,SAAU6D,KAAK3B,MAAMnC,MACrBG,OAAQ2D,KAAK1B,kBACbtC,OAAQgE,KAAKtB,mBAEf,cAAC,EAAD,CAAQjC,QAASuD,KAAK3B,kB,GA7Ed4B,IAAMC,WAqFT9B,IC/EA+B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBvB,MAAK,YAAkD,IAA/CwB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.84553d33.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../styles/Form.css';\r\n\r\nconst Form = (props) => {\r\n    return (\r\n        <form onSubmit={props.submit}>\r\n            <input type=\"text\" value={props.userCity} onChange={props.change} placeholder=\"Wpisz miasto...\" />\r\n            <button className=\"confirm\"><i className=\"fas fa-meteor\"></i></button>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default Form;","import React from 'react';\r\nimport '../styles/Result.css';\r\n\r\nconst Result = (props) => {\r\n    const { err, city, sunrise, sunset, temp, wind, pressure, date, value, picNr, humidity, clouds } = props.weather;\r\n    let content = null;\r\n    const ulr = `http://openweathermap.org/img/wn/${picNr}@2x.png`;\r\n    const errorPage = (\r\n        <p className=\"invalidCity\">Nie mamy w bazie podanego miasta: {value}</p>\r\n    )\r\n    if (!err && city) {\r\n        let sunriseTime = new Date(sunrise * 1000).toLocaleTimeString();\r\n        sunriseTime = sunriseTime.slice(0, 5);\r\n        let sunsetTime = new Date(sunset * 1000).toLocaleTimeString();\r\n        sunsetTime = sunsetTime.slice(0, 5);\r\n        let styles = {\r\n            backgroundImage: `url(${ulr})`,\r\n        };\r\n        content = (\r\n            <section className=\"forecast\">\r\n                <header className=\"mainInfo\">\r\n                    <h1>{city}: <span className=\"temp\">{temp}&#176;C</span></h1>\r\n                    <p>{date}</p>\r\n                    <div className=\"picture\" style={styles}></div>\r\n                </header>\r\n                <aside className=\"otherData\">\r\n                    <div>\r\n                        <p>{wind}m/s</p>\r\n                        <p>Siła wiatru</p>\r\n                    </div>\r\n                    <div>\r\n                        <p>{pressure}hPa</p>\r\n                        <p>Ciśnienie</p>\r\n                    </div>\r\n                    <div>\r\n                        <p>{humidity}%</p>\r\n                        <p>Wilgotność</p>\r\n                    </div>\r\n                    <div>\r\n                        <p>{clouds}%</p>\r\n                        <p>Zachmurzenie</p>\r\n                    </div>\r\n                    <div>\r\n                        <p>{sunriseTime}</p>\r\n                        <p>Wschód słońca</p>\r\n                    </div>\r\n                    <div>\r\n                        <p>{sunsetTime}</p>\r\n                        <p>Zachód słońca</p>\r\n                    </div>\r\n                </aside>\r\n            </section>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"result\">\r\n                {err ? errorPage : content}\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Result;","export default __webpack_public_path__ + \"static/media/512px-React-icon.svg.ad5bf3e1.png\";","import React from 'react';\r\nimport reactLogo from '../images/512px-React-icon.svg.png';\r\nimport '../styles/Header.css';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header>\r\n            <p>Weather App in </p>\r\n            <div className=\"img\"><img src={reactLogo} alt=\"logoReact\" className=\"move\" /></div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react';\nimport '../styles/App.css';\nimport Form from './Form';\nimport Result from './Result';\nimport Header from './Header';\n\nclass App extends React.Component {\n\n  state = {\n    value: \"\",\n    date: \"\",\n    humidity: \"\",\n    clouds: \"\",\n    city: \"\",\n    sunrise: \"\",\n    sunset: \"\",\n    temp: \"\",\n    wind: \"\",\n    pressure: \"\",\n    picNr: \"\",\n    err: false,\n  }\n\n\n\n  handleInputChange = (e) => {\n    this.setState({\n      value: e.target.value\n    })\n  }\n\n  handleCitySubmit = (e) => {\n    e.preventDefault();\n    // console.log(\"Potwierdzony formularz\");\n    const API = `http://api.openweathermap.org/data/2.5/weather?q=${this.state.value}&appid=4a4332af6685cdba1f0675e1f4a2e2bb&units=metric`;\n    // const Pic = `http://openweathermap.org/img/wn/${this.state.picNr}@2x.png`;\n    fetch(API)\n      .then(response => {\n        if (response.ok) {\n          return response\n        }\n        throw Error(\"Nie udało się\")\n      })\n      .then(response => response.json())\n      .then(data => {\n        // console.log(data);\n        let time = new Date();\n        time = time.toISOString().slice(0, 10);\n        this.setState({\n          err: false,\n          picNr: data.weather[0].icon,\n          date: time,\n          humidity: data.main.humidity,\n          clouds: data.clouds.all,\n          city: data.name,\n          sunrise: data.sys.sunrise,\n          sunset: data.sys.sunset,\n          temp: data.main.temp.toFixed(1),\n          wind: data.wind.speed,\n          pressure: data.main.pressure,\n          value: \"\",\n        });\n      })\n      .catch(err => {\n        console.log(err);\n        this.setState({\n          err: true,\n          city: this.state.value\n        });\n      })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"Background\">  </div>\n        <div className=\"wrapper\">\n          <Header />\n          <Form\n            userCity={this.state.value}\n            change={this.handleInputChange}\n            submit={this.handleCitySubmit}\n          />\n          <Result weather={this.state} />\n        </div>\n      </div>\n    )\n\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}